//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table User {
  id Int [pk, increment]
  firstName String [not null]
  lastName String [not null]
  username String [unique, not null]
  email String [unique, not null]
  gender Gender [not null]
  birthDate DateTime [not null]
  password String [not null]
  roleId Int [not null]
  status UserStatus [not null, default: 'ACTIVE']
  following Follow [not null]
  followers Follow [not null]
  discussions Discussion [not null]
  followedCommunities UserCommunity [not null]
  createdCommunities Community [not null]
  likes Like [not null]
  comments Comment [not null]
  commentLikes CommentLike [not null]
  bookmarks Bookmark [not null]
  notifications Notification [not null]
  filedDiscussionReports DiscussionReport [not null]
  filledCommentReports CommentReport [not null]
  moderatedActions ModerationLog [not null]
  actionsOnUser ModerationLog [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  favoriteStocks FavoriteStock [not null]
  role Role [not null]
}

Table FavoriteStock {
  id Int [pk, increment]
  userId Int [not null]
  ticker String [not null]
  name String
  type String
  region String
  currency String
  createdAt DateTime [default: `now()`, not null]
  user User [not null]

  indexes {
    (userId, ticker) [unique]
  }
}

Table Community {
  id Int [pk, increment]
  name String [unique, not null]
  description String
  userId Int [not null]
  isDeleted Boolean [not null, default: false]
  discussions Discussion [not null]
  followers UserCommunity [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]
}

Table Discussion {
  id Int [pk, increment]
  title String [not null]
  content String [not null]
  userId Int [not null]
  communityId Int [not null]
  isDeleted Boolean [not null, default: false]
  likes Like [not null]
  comments Comment [not null]
  bookmarks Bookmark [not null]
  trendingScore Float [not null, default: 0]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  reports DiscussionReport [not null]
  user User [not null]
  community Community [not null]
}

Table Like {
  id Int [pk, increment]
  userId Int [not null]
  discussionId Int [not null]
  user User [not null]
  discussion Discussion [not null]

  indexes {
    (userId, discussionId) [unique]
  }
}

Table Comment {
  id Int [pk, increment]
  content String [not null]
  userId Int [not null]
  discussionId Int [not null]
  isDeleted Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  user User [not null]
  discussion Discussion [not null]
  likes CommentLike [not null]
  reports CommentReport [not null]
}

Table CommentLike {
  id Int [pk, increment]
  userId Int [not null]
  commentId Int [not null]
  createdAt DateTime [default: `now()`, not null]
  user User [not null]
  comment Comment [not null]

  indexes {
    (userId, commentId) [unique]
  }
}

Table Role {
  id Int [pk, increment]
  roleName RoleType [unique, not null]
  users User [not null]
  permissions RolePermission [not null]
}

Table Permission {
  id Int [pk, increment]
  permissionName String [unique, not null]
  description String
  roles RolePermission [not null]
}

Table DiscussionReport {
  id Int [pk, increment]
  userId Int [not null]
  discussionId Int [not null]
  reason ReportReason [not null]
  status ReportStatus [not null, default: 'PENDING']
  createdAt DateTime [default: `now()`, not null]
  reviewedAt DateTime
  notes String
  aiFlagged Boolean
  aiSeverity Int
  user User [not null]
  discussion Discussion [not null]
}

Table CommentReport {
  id Int [pk, increment]
  userId Int [not null]
  commentId Int [not null]
  reason ReportReason [not null]
  status ReportStatus [not null, default: 'PENDING']
  createdAt DateTime [default: `now()`, not null]
  reviewedAt DateTime
  notes String
  aiFlagged Boolean
  aiSeverity Int
  user User [not null]
  comment Comment [not null]
}

Table Notification {
  id Int [pk, increment]
  userId Int [not null]
  content String [not null]
  type String [not null]
  isRead Boolean [not null, default: false]
  createdAt DateTime [default: `now()`, not null]
  user User [not null]
}

Table RolePermission {
  id Int [pk, increment]
  roleId Int [not null]
  permissionId Int [not null]
  role Role [not null]
  permission Permission [not null]

  indexes {
    (roleId, permissionId) [unique]
  }
}

Table UserCommunity {
  id Int [pk, increment]
  userId Int [not null]
  communityId Int [not null]
  joinedAt DateTime [default: `now()`, not null]
  user User [not null]
  community Community [not null]

  indexes {
    (userId, communityId) [unique]
  }
}

Table Follow {
  id Int [pk, increment]
  followerId Int [not null]
  followedId Int [not null]
  createdAt DateTime [default: `now()`, not null]
  follower User [not null]
  followed User [not null]

  indexes {
    (followerId, followedId) [unique]
  }
}

Table Bookmark {
  id Int [pk, increment]
  userId Int [not null]
  discussionId Int [not null]
  createdAt DateTime [default: `now()`, not null]
  user User [not null]
  discussion Discussion [not null]

  indexes {
    (userId, discussionId) [unique]
  }
}

Table ModerationLog {
  id Int [pk, increment]
  adminId Int [not null]
  userId Int
  action String [not null]
  targetId Int
  createdAt DateTime [default: `now()`, not null]
  admin User [not null]
  user User
}

Enum Gender {
  MALE
  FEMALE
  OTHER
}

Enum RoleType {
  ADMIN
  MODERATOR
  PREMIUM
  USER
}

Enum ReportStatus {
  PENDING
  RESOLVED
  DISMISSED
}

Enum ReportReason {
  SPAM
  ADVERTISING
  FRAUD
  FINANCIAL_MANIPULATION
  MISINFORMATION
  INAPPROPRIATE_CONTENT
  HARASSMENT
  OFF_TOPIC
  OTHER
}

Enum UserStatus {
  ACTIVE
  BANNED
}

Ref: User.roleId > Role.id

Ref: FavoriteStock.userId > User.id

Ref: Community.userId > User.id

Ref: Discussion.userId > User.id

Ref: Discussion.communityId > Community.id

Ref: Like.userId > User.id

Ref: Like.discussionId > Discussion.id

Ref: Comment.userId > User.id

Ref: Comment.discussionId > Discussion.id

Ref: CommentLike.userId > User.id

Ref: CommentLike.commentId > Comment.id

Ref: DiscussionReport.userId > User.id

Ref: DiscussionReport.discussionId > Discussion.id

Ref: CommentReport.userId > User.id

Ref: CommentReport.commentId > Comment.id

Ref: Notification.userId > User.id

Ref: RolePermission.roleId > Role.id

Ref: RolePermission.permissionId > Permission.id

Ref: UserCommunity.userId > User.id

Ref: UserCommunity.communityId > Community.id

Ref: Follow.followerId > User.id

Ref: Follow.followedId > User.id

Ref: Bookmark.userId > User.id

Ref: Bookmark.discussionId > Discussion.id

Ref: ModerationLog.adminId > User.id

Ref: ModerationLog.userId > User.id